basePath: /api/v1
definitions:
  tasks.CreateTaskRequest:
    properties:
      description:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  tasks.EditTaskStatusRequest:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
  tasks.Task:
    properties:
      description:
        type: string
      id:
        type: integer
      status:
        type: string
      title:
        type: string
      user_id:
        type: integer
    type: object
  user.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
    type: object
  user.UserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  utils.ErrorResponse:
    properties:
      errorCode:
        type: string
      errorString:
        type: string
      message:
        type: string
    type: object
  utils.LoginSuccessResponse:
    properties:
      message:
        type: string
      token:
        type: string
    type: object
  utils.SuccessResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: saimmahmood61@gmail.com
    name: Saeem Mehmood
    url: https://github.com/saim61
  description: This is the documentation for your tasks list. It shows all the routes
    and whatever you can do with this service. Once you create your account, login
    and click on Authorize button at the top and add your bearer toke. Be sure to
    add `Bearer` before your token otherwise requests would fail.
  title: Tasks List Go Documentation API
  version: "1.0"
paths:
  /createTask:
    post:
      description: Create a task as per your liking
      parameters:
      - description: Required create task parameters
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/tasks.CreateTaskRequest'
      - description: Insert your CSRF token. Access the GET /protected route to get
          it
        in: header
        name: X-CSRF-token
        required: true
        type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      security:
      - bearerToken: []
      summary: Create a task
      tags:
      - Tasks
  /deleteTask/:id:
    delete:
      description: Delete your task by its id
      parameters:
      - description: Required task id
        in: query
        name: id
        required: true
        type: integer
      - description: Insert your CSRF token. Access the GET /protected route to get
          it
        in: header
        name: X-CSRF-token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      security:
      - bearerToken: []
      summary: Delete a task by its id
      tags:
      - Tasks
  /editTask:
    patch:
      description: Edit a task as per your liking. Add the task id and the other parameters
      parameters:
      - description: Required edit task parameters
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/tasks.Task'
      - description: Insert your CSRF token. Access the GET /protected route to get
          it
        in: header
        name: X-CSRF-token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      security:
      - bearerToken: []
      summary: Edit a task
      tags:
      - Tasks
  /editTaskStatus:
    patch:
      description: Edit a task status
      parameters:
      - description: Required edit task status parameters
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/tasks.EditTaskStatusRequest'
      - description: Insert your CSRF token. Access the GET /protected route to get
          it
        in: header
        name: X-CSRF-token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      security:
      - bearerToken: []
      summary: Edit a task status
      tags:
      - Tasks
  /editUser:
    patch:
      description: Edit your details
      parameters:
      - description: Required user parameters
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UserRequest'
      - description: Insert your CSRF token. Access the GET /protected route to get
          it
        in: header
        name: X-CSRF-token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      security:
      - bearerToken: []
      summary: Edit a user
      tags:
      - User
  /login:
    post:
      description: Login by using your email and password and get your token
      parameters:
      - description: Required user parameters
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UserRequest'
      - description: Insert your CSRF token. Access the GET /protected route to get
          it
        in: header
        name: X-CSRF-token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.LoginSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Login user
      tags:
      - User
  /register:
    post:
      description: Register yourself using your email and password
      parameters:
      - description: Required user parameters
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UserRequest'
      - description: Insert your CSRF token. Access the GET /protected route to get
          it
        in: header
        name: X-CSRF-token
        required: true
        type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Register a new user
      tags:
      - User
  /task/:id:
    get:
      description: Retreive your task by its id
      parameters:
      - description: Required task id
        in: query
        name: id
        required: true
        type: integer
      - description: Insert your CSRF token. Access the GET /protected route to get
          it
        in: header
        name: X-CSRF-token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tasks.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      security:
      - bearerToken: []
      summary: Get a task by its id
      tags:
      - Tasks
  /tasks:
    get:
      description: Get and view all the tasks by all users in this route.
      parameters:
      - description: Insert your CSRF token. Access the GET /protected route to get
          it
        in: header
        name: X-CSRF-token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tasks.Task'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      security:
      - bearerToken: []
      summary: Get tasks list of all users
      tags:
      - Tasks
  /user:
    post:
      description: Fetch your details by using your email and password
      parameters:
      - description: Required user parameters
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UserRequest'
      - description: Insert your CSRF token. Access the GET /protected route to get
          it
        in: header
        name: X-CSRF-token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      security:
      - bearerToken: []
      summary: Get an existing user
      tags:
      - User
  /user_tasks:
    get:
      description: Get and view all the tasks created by you.
      parameters:
      - description: Insert your CSRF token. Access the GET /protected route to get
          it
        in: header
        name: X-CSRF-token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tasks.Task'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      security:
      - bearerToken: []
      summary: Get tasks list of current user
      tags:
      - Tasks
securityDefinitions:
  bearerToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
